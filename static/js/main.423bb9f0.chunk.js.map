{"version":3,"sources":["actions.js","template/if.jsx","template/buttonConnectar.jsx","template/buttonIniciarTreino.jsx","template/buttonFinalizarTreino.jsx","template/buttonNotificar.jsx","App.js","reducers.js","index.js"],"names":["changeName","name","type","payload","changeId","id","changeHearthBeat","hearthBeat","changeMiband","miband","changeBluetooth","bluetooth","changeDevice","device","changeTreinoStatus","treino","changeLoading","loading","props","hidden","children","ButtonConnectart","connectar","bind","log","this","requestDevice","filters","services","MiBand","advertisementService","optionalServices","addEventListener","a","gatt","disconnect","enqueueSnackbar","variant","Button","color","onClick","console","React","Component","connect","state","user","dispatch","bindActionCreators","withSnackbar","count","retry","ButtonIniciarTreino","startHrm","server","init","on","rate","setTimeout","action","key","closeSnackbar","autoHideDuration","hrmStart","message","ButtonFinalizarTreino","endHrm","hrmStop","ButtonNotificar","notigicarPulseira","Miband","showNotification","App","navigator","splitUrl","window","location","search","split","length","className","CircularProgress","Box","justifyContent","Icon","isTreinoStarted","INITIAL_STATE","undefined","rootReducer","combineReducers","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","thunk","multi","promise","createStore","reducers","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.423bb9f0.chunk.js","sourcesContent":["export const changeName = (name) => ({\r\n    type: 'NAME_CHANGED',\r\n    payload: name\r\n})\r\n\r\nexport const changeId = (id) => ({\r\n    type: 'ID_CHANGED',\r\n    payload: id\r\n})\r\n\r\nexport const changeHearthBeat = (hearthBeat) => ({\r\n    type: 'HEARTH_BEAT_CHANGED',\r\n    payload: hearthBeat\r\n})\r\n\r\nexport const changeMiband = (miband) => ({\r\n    type: 'MIBAND_CHANGED',\r\n    payload: miband\r\n})\r\n\r\nexport const changeBluetooth = (bluetooth) => ({\r\n    type: 'BLUETOOTH_CHANGED',\r\n    payload: bluetooth\r\n})\r\n\r\nexport const changeDevice = (device) => ({\r\n    type: 'DEVICE_CHANGED',\r\n    payload: device\r\n})\r\n\r\nexport const changeTreinoStatus = (treino) => ({\r\n    type: 'TREINO_CHANGED',\r\n    payload: treino\r\n})\r\n\r\nexport const changeLoading = (loading) => ({\r\n    type: 'LOADING_CHANGED',\r\n    payload: loading\r\n})\r\n","export default props => {\r\n    if(!props.hidden) {\r\n        return props.children\r\n    } else {\r\n        return false\r\n    }\r\n}","\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MiBand from 'miband';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeDevice, changeLoading } from '../actions'\r\nimport { withSnackbar } from 'notistack';\r\n\r\nclass ButtonConnectart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.connectar = this.connectar.bind(this)\r\n    }\r\n\r\n    async connectar(log) {\r\n        this.props.changeLoading(true)\r\n        let device;\r\n        if (!this.props.bluetooth) {\r\n            log('WebBluetooth is not supported by your browser!');\r\n            return;\r\n        }\r\n        log('Requesting Bluetooth Device...');\r\n        if (!this.props.device) {\r\n            device = await this.props.bluetooth.requestDevice({\r\n                filters: [\r\n                    { services: [MiBand.advertisementService] }\r\n                ],\r\n                optionalServices: MiBand.optionalServices\r\n            });\r\n            await this.props.changeDevice(device)\r\n        }\r\n        \r\n        device.addEventListener('gattserverdisconnected', async () => {\r\n            log('Device disconnected');\r\n            await device.gatt.disconnect();\r\n            this.props.enqueueSnackbar('Pulseira desconectada', { variant: 'error' });\r\n        });\r\n\r\n        await device.gatt.disconnect();\r\n        this.props.changeLoading(false)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.connectar(console.log)}>Conectar</Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    device: state.user.device,\r\n    bluetooth: state.user.bluetooth,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeDevice, changeLoading }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ButtonConnectart));\r\n","\r\n\r\nimport React, { Fragment } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MiBand from 'miband';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeHearthBeat, changeTreinoStatus, changeMiband, changeLoading } from '../actions'\r\nimport { withSnackbar } from 'notistack';\r\n\r\nlet count = 0;\r\nlet retry = 0;\r\n\r\nclass ButtonIniciarTreino extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.startHrm = this.startHrm.bind(this)\r\n    }\r\n\r\n    startHrm = async (log) => {\r\n        this.props.changeLoading(true)\r\n        try {\r\n            await this.props.changeTreinoStatus(true)\r\n            log('Connecting to the device...');\r\n            if (!this.props.miband) {\r\n                const server = await this.props.device.gatt.connect();\r\n                log('Connected');\r\n                let miband = new MiBand(server);\r\n                await miband.init();\r\n                miband.on('heart_rate', (rate) => {\r\n                    log('Heart Rate:', rate)\r\n                    this.props.changeHearthBeat(rate)\r\n                })\r\n                miband.on('button', () => {\r\n                    log('button tapped, count: ', count)\r\n                    count += 1;\r\n                    setTimeout(() => count = 0, 3000)\r\n                    if (count > 1) {\r\n                        const action = (key) => (\r\n                            <Fragment>\r\n                                <Button onClick={() => { this.props.closeSnackbar(key) }}>\r\n                                    {'Fechar'}\r\n                                </Button>\r\n                            </Fragment>\r\n                        );\r\n                        this.props.enqueueSnackbar('Usuario precisa de ajuda', { variant: 'warning', action, autoHideDuration: null });\r\n                        count = 0;\r\n                    }\r\n                })\r\n                this.props.changeMiband(miband)\r\n                await miband.hrmStart()\r\n                this.props.changeLoading(false)\r\n            } else {\r\n                await this.props.miband.hrmStart()\r\n                this.props.changeLoading(false)\r\n            }\r\n        } catch (error) {\r\n            log('Argh!', error.message || error);\r\n            if (retry > 8) {\r\n                await this.props.changeTreinoStatus(false)\r\n                this.props.enqueueSnackbar('Ocorreu um erro tente novamente', { variant: 'error' });\r\n                retry = 0\r\n                this.props.changeLoading(false)\r\n            } else {\r\n                retry += 1;\r\n                log('Retrying ...')\r\n                this.startHrm(log)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.startHrm(console.log)}>Iniciar Treino</Button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    device: state.user.device,\r\n    miband: state.user.miband,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeHearthBeat, changeTreinoStatus, changeMiband, changeLoading }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ButtonIniciarTreino));","\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeTreinoStatus, changeMiband, changeLoading } from '../actions'\r\n\r\n\r\nclass ButtonFinalizarTreino extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.endHrm = this.endHrm.bind(this)\r\n    }\r\n\r\n    endHrm = async (log) => {\r\n        this.props.changeLoading(true)\r\n        log('end hrm')\r\n        try {\r\n            await this.props.miband.hrmStop()\r\n            await this.props.changeTreinoStatus(false)\r\n            this.props.changeLoading(false)\r\n            await this.props.changeMiband(null)\r\n        } catch (error) {\r\n            await this.props.changeTreinoStatus(false)\r\n            this.props.changeLoading(false)\r\n        }\r\n        log('disconnect device')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.endHrm(console.log)}>Finalizar Treino</Button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    miband: state.user.miband,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeTreinoStatus, changeMiband, changeLoading }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonFinalizarTreino);","\r\n\r\n\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Miband from 'miband'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeMiband, changeLoading } from '../actions'\r\n\r\nlet retry = 0\r\nclass ButtonNotificar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.notigicarPulseira = this.notigicarPulseira.bind(this)\r\n    }\r\n\r\n    async notigicarPulseira(log) {\r\n        this.props.changeLoading(true)\r\n        try {\r\n            const server = await this.props.device.gatt.connect();\r\n            let miband = new Miband(server);\r\n            this.props.changeMiband(miband)\r\n            await miband.init();\r\n            miband.showNotification('message');\r\n            this.props.changeLoading(false)\r\n        } catch (error) {\r\n            log('Error: ' + error.message || error)\r\n            if (retry > 4) {\r\n                this.props.changeLoading(false)\r\n            } else {\r\n                retry += 1;\r\n                this.notigicarPulseira(log)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.notigicarPulseira(console.log)}>Notificar Pulseira</Button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    device: state.user.device,\r\n    miband: state.user.miband,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeMiband, changeLoading }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonNotificar);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { changeBluetooth, changeName, changeId, changeLoading } from './actions'\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport If from \"./template/if\";\nimport ButtonConnectart from './template/buttonConnectar'\nimport ButtonIniciarTreino from './template/buttonIniciarTreino'\nimport ButtonFinalizarTreino from './template/buttonFinalizarTreino'\nimport ButtonNotificar from './template/buttonNotificar'\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.props.changeBluetooth(navigator.bluetooth)\n    this.props.changeLoading(false)\n  }\n\n  render() {\n    const splitUrl = window.location.search.split('?')\n    if (splitUrl.length === 2) {\n      this.props.changeId(splitUrl[1].split(':')[0])\n      this.props.changeName(splitUrl[1].split(':')[1])\n    }\n\n    return (\n      <div className=\"App\">\n        <If hidden={!this.props.loading}>\n          <CircularProgress />\n        </If>\n        <If hidden={this.props.loading}>\n          <Box  justifyContent=\"flex-start\">\n            {/* <h1>Pulseira: {this.props.serial}</h1> */}\n            <If hidden={!this.props.name}>\n              <h1>{this.props.name}</h1>\n            </If>\n            <div className='button-padding'>\n              <Icon>favorite</Icon> : <strong>{this.props.hearthBeat}</strong>\n            </div>\n            <If hidden={this.props.device !== null}>\n              <div className='button-padding'>\n                <ButtonConnectart />\n              </div>\n            </If>\n            <If hidden={this.props.isTreinoStarted || this.props.device === null}>\n              <div className='button-padding'>\n                <ButtonIniciarTreino />\n              </div>\n            </If>\n            <If hidden={!this.props.isTreinoStarted || this.props.device === null}>\n              <div className='button-padding'>\n                <ButtonFinalizarTreino />\n              </div>\n            </If>\n            <If hidden={this.props.device === null}>\n              <div className='button-padding'>\n                <ButtonNotificar />\n              </div>\n            </If>\n          </Box>\n        </If>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  id: state.user.id,\n  name: state.user.name,\n  hearthBeat: state.user.hearthBeat,\n  device: state.user.device,\n  isTreinoStarted: state.user.isTreinoStarted,\n  loading: state.user.loading\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeBluetooth, changeName, changeId, changeLoading }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux'\r\n\r\nconst INITIAL_STATE = {\r\n    id: undefined,\r\n    name: undefined,\r\n    hearthBeat: 0,\r\n    bluetooth: null,\r\n    device: null,\r\n    miband: null,\r\n    isTreinoStarted: false,\r\n    loading: true\r\n}\r\n\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'ID_CHANGED':\r\n            return { ...state, id: action.payload }\r\n        case 'NAME_CHANGED':\r\n            return { ...state, name: action.payload }\r\n        case 'HEARTH_BEAT_CHANGED':\r\n            return { ...state, hearthBeat: action.payload }\r\n        case 'MIBAND_CHANGED':\r\n            return { ...state, miband: action.payload }\r\n        case 'BLUETOOTH_CHANGED':\r\n            return { ...state, bluetooth: action.payload }\r\n        case 'DEVICE_CHANGED':\r\n            return { ...state, device: action.payload }\r\n        case 'TREINO_CHANGED':\r\n            return { ...state, isTreinoStarted: action.payload }\r\n        case 'LOADING_CHANGED':\r\n            return { ...state, loading: action.payload}\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport promise from 'redux-promise'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\nimport { SnackbarProvider } from 'notistack'\n\n\nimport './index.css';\nimport App from './App';\nimport reducers from './reducers'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = applyMiddleware(thunk, multi, promise)(createStore)(reducers, devTools)\n\nReactDOM.render(\n    <Provider store={store}>\n        <SnackbarProvider maxSnack={3}>\n            <App />\n        </SnackbarProvider>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}