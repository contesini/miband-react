{"version":3,"sources":["actions.js","template/if.jsx","App.js","reducers.js","index.js"],"names":["changeName","name","type","payload","changeId","id","changeHearthBeat","hearthBeat","changeMiband","miband","changeBluetooth","bluetooth","changeDevice","device","changeTreinoStatus","treino","props","hidden","children","App","startHrm","log","a","gatt","connect","server","MiBand","init","on","rate","hrmStart","message","endHrm","hrmStop","bind","scan","navigator","notigicarPulseira","this","showNotification","requestDevice","filters","services","advertisementService","optionalServices","addEventListener","disconnect","Box","className","justifyContent","Icon","Button","variant","color","onClick","console","isTreinoStarted","React","Component","state","user","dispatch","bindActionCreators","INITIAL_STATE","rootReducer","combineReducers","action","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","thunk","multi","promise","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d66ae09d.chunk.js","sourcesContent":["export const changeName = (name) => ({\r\n    type: 'NAME_CHANGED',\r\n    payload: name\r\n})\r\n\r\nexport const changeId = (id) => ({\r\n    type: 'ID_CHANGED',\r\n    payload: id\r\n})\r\n\r\nexport const changeHearthBeat = (hearthBeat) => ({\r\n    type: 'HEARTH_BEAT_CHANGED',\r\n    payload: hearthBeat\r\n})\r\n\r\nexport const changeMiband = (miband) => ({\r\n    type: 'MIBAND_CHANGED',\r\n    payload: miband\r\n})\r\n\r\nexport const changeBluetooth = (bluetooth) => ({\r\n    type: 'BLUETOOTH_CHANGED',\r\n    payload: bluetooth\r\n})\r\n\r\nexport const changeDevice = (device) => ({\r\n    type: 'DEVICE_CHANGED',\r\n    payload: device\r\n})\r\n\r\nexport const changeTreinoStatus = (treino) => ({\r\n    type: 'TREINO_CHANGED',\r\n    payload: treino\r\n})","export default props => {\r\n    if(!props.hidden) {\r\n        return props.children\r\n    } else {\r\n        return false\r\n    }\r\n}","import React from 'react';\nimport MiBand from 'miband';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { changeId, changeHearthBeat, changeName, changeMiband, changeBluetooth, changeDevice, changeTreinoStatus } from './actions'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box'\nimport If from \"./template/if\";\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.startHrm = this.startHrm.bind(this)\n    this.endHrm = this.endHrm.bind(this)\n    this.scan = this.scan.bind(this)\n    this.props.changeBluetooth(navigator.bluetooth)\n    this.notigicarPulseira = this.notigicarPulseira.bind(this)\n  }\n\n  startHrm = async (log) => {\n    try {\n      log('Connecting to the device...');\n      if (!this.props.miband) {\n        const server = await this.props.device.gatt.connect();\n        log('Connected');\n        let miband = new MiBand(server);\n        await miband.init();\n        miband.on('heart_rate', (rate) => {\n          log('Heart Rate:', rate)\n          this.props.changeHearthBeat(rate)\n        })\n        this.props.changeMiband(miband)\n      }\n      await this.props.changeTreinoStatus(true)\n      await this.props.miband.hrmStart()\n    } catch (error) {\n      log('Argh!', error);\n      log('Argh!', error.message);\n      connect(log)\n    }\n  }\n\n  async notigicarPulseira(log) {\n    if (this.props.miband) {\n      this.props.miband.showNotification('message');\n    } else {\n      const server = await this.props.device.gatt.connect();\n      let miband = new MiBand(server);\n      this.props.changeMiband(miband)\n      await miband.init();\n      miband.showNotification('message');\n    }\n  }\n\n  endHrm = async (log) => {\n    log('end hrm')\n    await this.props.miband.hrmStop()\n    await this.props.changeTreinoStatus(false)\n    await this.props.changeMiband(null)\n    log('disconnect device')\n  }\n\n  async scan(log) {\n    if (!this.props.bluetooth) {\n      log('WebBluetooth is not supported by your browser!');\n      return;\n    }\n    log('Requesting Bluetooth Device...');\n    if (!this.props.device) {\n      const device = await this.props.bluetooth.requestDevice({\n        filters: [\n          { services: [MiBand.advertisementService] }\n        ],\n        optionalServices: MiBand.optionalServices\n      });\n      this.props.changeDevice(device)\n    }\n\n    this.props.device.addEventListener('gattserverdisconnected', async () => {\n      log('Device disconnected');\n      await this.props.device.gatt.disconnect();\n      this.startHrm(log, this.props.device)\n    });\n\n    await this.props.device.gatt.disconnect();\n  }\n\n  render() {\n    return (\n      <Box className=\"App\" justifyContent=\"flex-start\">\n        {/* <h1>Pulseira: {this.props.serial}</h1>\n        <h1>{this.props.name} - {this.props.id}</h1> */}\n        <div className='button-padding'>\n          <Icon>favorite</Icon> : <strong>{this.props.hearthBeat}</strong>\n        </div>\n        <If hidden={this.props.device !== null}>\n          <div className='button-padding'>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.scan(console.log)}>Conectar</Button>\n          </div>\n        </If>\n        <If hidden={this.props.isTreinoStarted || this.props.device === null}>\n          <div className='button-padding'>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.startHrm(console.log)}>Iniciar Treino</Button>\n          </div>\n        </If>\n        <If hidden={!this.props.isTreinoStarted || this.props.device === null}>\n          <div className='button-padding'>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.endHrm(console.log)}>Finalizar Treino</Button>\n          </div>\n        </If>\n        <If hidden={this.props.device === null}>\n          <div className='button-padding'>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.notigicarPulseira(console.log)}>Notificar Pulseira</Button>\n          </div>\n        </If>\n      </Box>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  id: state.user.id,\n  name: state.user.name,\n  hearthBeat: state.user.hearthBeat,\n  device: state.user.device,\n  miband: state.user.miband,\n  bluetooth: state.user.bluetooth,\n  isTreinoStarted: state.user.isTreinoStarted\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeId, changeHearthBeat, changeName, changeMiband, changeBluetooth, changeDevice, changeTreinoStatus }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux'\r\n\r\nconst INITIAL_STATE = {\r\n    id: '123548',\r\n    name: 'allan contesini',\r\n    hearthBeat: 0,\r\n    bluetooth: null,\r\n    device: null,\r\n    miband: null,\r\n    isTreinoStarted: false,\r\n}\r\n\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'ID_CHANGED':\r\n            return { ...state, id: action.payload }\r\n        case 'NAME_CHANGED':\r\n            return { ...state, name: action.payload }\r\n        case 'HEARTH_BEAT_CHANGED':\r\n            return { ...state, hearthBeat: action.payload }\r\n        case 'MIBAND_CHANGED':\r\n            return { ...state, miband: action.payload }\r\n        case 'BLUETOOTH_CHANGED':\r\n            return { ...state, bluetooth: action.payload }\r\n        case 'DEVICE_CHANGED':\r\n            return { ...state, device: action.payload }\r\n        case 'TREINO_CHANGED':\r\n            return { ...state, isTreinoStarted: action.payload }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport promise from 'redux-promise'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport reducers from './reducers'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = applyMiddleware(thunk, multi, promise)(createStore)(reducers, devTools)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}