{"version":3,"sources":["actions.js","template/if.jsx","template/buttonConnectar.jsx","template/buttonIniciarTreino.jsx","template/buttonFinalizarTreino.jsx","template/buttonNotificar.jsx","App.js","reducers.js","index.js"],"names":["changeHearthBeat","hearthBeat","type","payload","changeMiband","miband","changeBluetooth","bluetooth","changeDevice","device","changeTreinoStatus","treino","props","hidden","children","ButtonConnectart","connectar","bind","log","this","requestDevice","filters","services","MiBand","advertisementService","optionalServices","addEventListener","a","gatt","disconnect","Button","variant","color","onClick","console","React","Component","connect","state","user","dispatch","bindActionCreators","ButtonIniciarTreino","startHrm","server","init","on","rate","hrmStart","message","ButtonFinalizarTreino","endHrm","hrmStop","ButtonNotificar","notigicarPulseira","showNotification","Miband","App","navigator","Box","className","justifyContent","Icon","isTreinoStarted","id","name","INITIAL_STATE","rootReducer","combineReducers","action","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","thunk","multi","promise","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"2UAUaA,EAAmB,SAACC,GAAD,MAAiB,CAC7CC,KAAM,sBACNC,QAASF,IAGAG,EAAe,SAACC,GAAD,MAAa,CACrCH,KAAM,iBACNC,QAASE,IAGAC,EAAkB,SAACC,GAAD,MAAgB,CAC3CL,KAAM,oBACNC,QAASI,IAGAC,EAAe,SAACC,GAAD,MAAa,CACrCP,KAAM,iBACNC,QAASM,IAGAC,EAAqB,SAACC,GAAD,MAAa,CAC3CT,KAAM,iBACNC,QAASQ,I,kBChCE,WAAAC,GACX,OAAIA,EAAMC,QACCD,EAAME,U,yDCOfC,E,YAEF,WAAYH,GAAQ,IAAD,8BACf,4CAAMA,KACDI,UAAY,EAAKA,UAAUC,KAAf,gBAFF,E,+GAKHC,G,yEAEPC,KAAKP,MAAML,U,uBACZW,EAAI,kD,6BAGRA,EAAI,kCACCC,KAAKP,MAAMH,O,iCACGU,KAAKP,MAAML,UAAUa,cAAc,CAC9CC,QAAS,CACL,CAAEC,SAAU,CAACC,IAAOC,wBAExBC,iBAAkBF,IAAOE,mB,cAJ7BhB,E,iBAMMU,KAAKP,MAAMJ,aAAaC,G,eAGlCA,EAAOiB,iBAAiB,yBAAxB,qBAAkD,sBAAAC,EAAA,4DAC9CT,EAAI,uBAD0C,SAExCT,EAAOmB,KAAKC,aAF4B,0C,UAK5CpB,EAAOmB,KAAKC,a,qIAGZ,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,kBAAM,EAAKjB,UAAUkB,QAAQhB,OAAlF,gB,GAlCmBiB,IAAMC,WA6CtBC,cANS,SAAAC,GAAK,MAAK,CAC9B7B,OAAQ6B,EAAMC,KAAK9B,OACnBF,UAAW+B,EAAMC,KAAKhC,YAGC,SAAAiC,GAAQ,OAAIC,YAAmB,CAAEjC,gBAAgBgC,IAC7DH,CAA6CtB,GC5CtD2B,E,YAEF,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KAIV+B,SALmB,sCAKR,WAAOzB,GAAP,iBAAAS,EAAA,8EAEG,EAAKf,MAAMF,oBAAmB,GAFjC,UAGHQ,EAAI,+BACC,EAAKN,MAAMP,OAJb,iCAKsB,EAAKO,MAAMH,OAAOmB,KAAKS,UAL7C,cAKOO,EALP,OAMC1B,EAAI,aACAb,EAAS,IAAIkB,IAAOqB,GAPzB,UAQOvC,EAAOwC,OARd,QASCxC,EAAOyC,GAAG,aAAc,SAACC,GACrB7B,EAAI,cAAe6B,GACnB,EAAKnC,MAAMZ,iBAAiB+C,KAEhC,EAAKnC,MAAMR,aAAaC,GAbzB,yBAeG,EAAKO,MAAMP,OAAO2C,WAfrB,iEAiBH9B,EAAI,QAAS,KAAM+B,SAAN,MAjBV,UAkBG,EAAKrC,MAAMF,oBAAmB,GAlBjC,wDALQ,sDAEf,EAAKiC,SAAW,EAAKA,SAAS1B,KAAd,gBAFD,E,sEA2BT,IAAD,OACL,OACI,kBAACa,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,kBAAM,EAAKU,SAAST,QAAQhB,OAAjF,sB,GA/BsBiB,IAAMC,WA2CzBC,cANS,SAAAC,GAAK,MAAK,CAC9B7B,OAAQ6B,EAAMC,KAAK9B,OACnBJ,OAAQiC,EAAMC,KAAKlC,SAGI,SAAAmC,GAAQ,OAAIC,YAAmB,CAAEzC,mBAAkBU,qBAAoBN,gBAAgBoC,IACnGH,CAA6CK,GC7CtDQ,E,YACF,WAAYtC,GAAQ,IAAD,8BACf,4CAAMA,KAIVuC,OALmB,sCAKV,WAAOjC,GAAP,SAAAS,EAAA,4DACLT,EAAI,WADC,SAEC,EAAKN,MAAMP,OAAO+C,UAFnB,uBAGC,EAAKxC,MAAMF,oBAAmB,GAH/B,uBAIC,EAAKE,MAAMR,aAAa,MAJzB,OAKLc,EAAI,qBALC,yCALU,sDAEf,EAAKiC,OAAS,EAAKA,OAAOlC,KAAZ,gBAFC,E,sEAaT,IAAD,OACL,OACI,kBAACa,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,kBAAM,EAAKkB,OAAOjB,QAAQhB,OAA/E,wB,GAhBwBiB,IAAMC,WA2B3BC,cALS,SAAAC,GAAK,MAAK,CAC9BjC,OAAQiC,EAAMC,KAAKlC,SAGI,SAAAmC,GAAQ,OAAIC,YAAmB,CAAE/B,qBAAoBN,gBAAgBoC,IACjFH,CAA6Ca,GCzBtDG,E,YAEF,WAAYzC,GAAQ,IAAD,8BACf,4CAAMA,KACD0C,kBAAoB,EAAKA,kBAAkBrC,KAAvB,gBAFV,E,uHAKKC,G,4EAChBC,KAAKP,MAAMP,O,gBACXc,KAAKP,MAAMP,OAAOkD,iBAAiB,W,uCAEdpC,KAAKP,MAAMH,OAAOmB,KAAKS,U,cAAtCO,E,OACFvC,EAAS,IAAImD,IAAOZ,GACxBzB,KAAKP,MAAMR,aAAaC,G,UAClBA,EAAOwC,O,QACbxC,EAAOkD,iBAAiB,W,qIAItB,IAAD,OACL,OACI,kBAACzB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,kBAAM,EAAKqB,kBAAkBpB,QAAQhB,OAA1F,0B,GArBkBiB,IAAMC,WAiCrBC,cANS,SAAAC,GAAK,MAAK,CAC9B7B,OAAQ6B,EAAMC,KAAK9B,OACnBJ,OAAQiC,EAAMC,KAAKlC,SAGI,SAAAmC,GAAQ,OAAIC,YAAmB,CAAErC,gBAAgBoC,IAC7DH,CAA6CgB,GC9BtDI,G,mBAEJ,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KACDA,MAAMN,gBAAgBoD,UAAUnD,WAFpB,E,sEAMjB,OACE,kBAACoD,EAAA,EAAD,CAAKC,UAAU,MAAMC,eAAe,cAGlC,yBAAKD,UAAU,kBACb,kBAACE,EAAA,EAAD,iBADF,MAC0B,gCAAS3C,KAAKP,MAAMX,aAE9C,kBAAC,EAAD,CAAIY,OAA8B,OAAtBM,KAAKP,MAAMH,QACrB,yBAAKmD,UAAU,kBACb,kBAAC,EAAD,QAGJ,kBAAC,EAAD,CAAI/C,OAAQM,KAAKP,MAAMmD,iBAAyC,OAAtB5C,KAAKP,MAAMH,QACnD,yBAAKmD,UAAU,kBACb,kBAAC,EAAD,QAGJ,kBAAC,EAAD,CAAI/C,QAASM,KAAKP,MAAMmD,iBAAyC,OAAtB5C,KAAKP,MAAMH,QACpD,yBAAKmD,UAAU,kBACb,kBAAC,EAAD,QAGJ,kBAAC,EAAD,CAAI/C,OAA8B,OAAtBM,KAAKP,MAAMH,QACrB,yBAAKmD,UAAU,kBACb,kBAAC,EAAD,a,GAhCMzB,IAAMC,YAkDTC,cATS,SAAAC,GAAK,MAAK,CAChC0B,GAAI1B,EAAMC,KAAKyB,GACfC,KAAM3B,EAAMC,KAAK0B,KACjBhE,WAAYqC,EAAMC,KAAKtC,WACvBQ,OAAQ6B,EAAMC,KAAK9B,OACnBsD,gBAAiBzB,EAAMC,KAAKwB,kBAGH,SAAAvB,GAAQ,OAAIC,YAAmB,CAAEnC,mBAAmBkC,IAChEH,CAA6CoB,G,2jBC7D5D,IAAMS,EAAgB,CAClBF,GAAI,SACJC,KAAM,kBACNhE,WAAY,EACZM,UAAW,KACXE,OAAQ,KACRJ,OAAQ,KACR0D,iBAAiB,GA4BNI,EAJKC,YAAgB,CAChC7B,KAtBuB,WAAoC,IAAnCD,EAAkC,uDAA1B4B,EAAeG,EAAW,uCAC1D,OAAQA,EAAOnE,MACX,IAAK,aACD,OAAO,EAAP,GAAYoC,EAAZ,CAAmB0B,GAAIK,EAAOlE,UAClC,IAAK,eACD,OAAO,EAAP,GAAYmC,EAAZ,CAAmB2B,KAAMI,EAAOlE,UACpC,IAAK,sBACD,OAAO,EAAP,GAAYmC,EAAZ,CAAmBrC,WAAYoE,EAAOlE,UAC1C,IAAK,iBACD,OAAO,EAAP,GAAYmC,EAAZ,CAAmBjC,OAAQgE,EAAOlE,UACtC,IAAK,oBACD,OAAO,EAAP,GAAYmC,EAAZ,CAAmB/B,UAAW8D,EAAOlE,UACzC,IAAK,iBACD,OAAO,EAAP,GAAYmC,EAAZ,CAAmB7B,OAAQ4D,EAAOlE,UACtC,IAAK,iBACD,OAAO,EAAP,GAAYmC,EAAZ,CAAmByB,gBAAiBM,EAAOlE,UAC/C,QACI,OAAO,EAAP,GAAYmC,OCjBlBgC,EAAWC,OAAOC,8BACpBD,OAAOC,+BAELC,EAAQC,YAAgBC,IAAOC,IAAOC,IAA9BH,CAAuCI,IAAvCJ,CAAoDK,EAAUT,GAE5EU,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAAC,EAAD,OAEFS,SAASC,eAAe,U","file":"static/js/main.4e53be35.chunk.js","sourcesContent":["export const changeName = (name) => ({\r\n    type: 'NAME_CHANGED',\r\n    payload: name\r\n})\r\n\r\nexport const changeId = (id) => ({\r\n    type: 'ID_CHANGED',\r\n    payload: id\r\n})\r\n\r\nexport const changeHearthBeat = (hearthBeat) => ({\r\n    type: 'HEARTH_BEAT_CHANGED',\r\n    payload: hearthBeat\r\n})\r\n\r\nexport const changeMiband = (miband) => ({\r\n    type: 'MIBAND_CHANGED',\r\n    payload: miband\r\n})\r\n\r\nexport const changeBluetooth = (bluetooth) => ({\r\n    type: 'BLUETOOTH_CHANGED',\r\n    payload: bluetooth\r\n})\r\n\r\nexport const changeDevice = (device) => ({\r\n    type: 'DEVICE_CHANGED',\r\n    payload: device\r\n})\r\n\r\nexport const changeTreinoStatus = (treino) => ({\r\n    type: 'TREINO_CHANGED',\r\n    payload: treino\r\n})\r\n","export default props => {\r\n    if(!props.hidden) {\r\n        return props.children\r\n    } else {\r\n        return false\r\n    }\r\n}","\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MiBand from 'miband';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeDevice } from '../actions'\r\n\r\n\r\nclass ButtonConnectart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.connectar = this.connectar.bind(this)\r\n    }\r\n\r\n    async connectar(log) {\r\n        let device;\r\n        if (!this.props.bluetooth) {\r\n            log('WebBluetooth is not supported by your browser!');\r\n            return;\r\n        }\r\n        log('Requesting Bluetooth Device...');\r\n        if (!this.props.device) {\r\n            device = await this.props.bluetooth.requestDevice({\r\n                filters: [\r\n                    { services: [MiBand.advertisementService] }\r\n                ],\r\n                optionalServices: MiBand.optionalServices\r\n            });\r\n            await this.props.changeDevice(device)\r\n        }\r\n        \r\n        device.addEventListener('gattserverdisconnected', async () => {\r\n            log('Device disconnected');\r\n            await device.gatt.disconnect();\r\n        });\r\n\r\n        await device.gatt.disconnect();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.connectar(console.log)}>Conectar</Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    device: state.user.device,\r\n    bluetooth: state.user.bluetooth,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeDevice }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonConnectart);\r\n","\r\n\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MiBand from 'miband';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeHearthBeat, changeTreinoStatus, changeMiband } from '../actions'\r\n\r\n\r\nclass ButtonIniciarTreino extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.startHrm = this.startHrm.bind(this)\r\n    }\r\n\r\n    startHrm = async (log) => {\r\n        try {\r\n            await this.props.changeTreinoStatus(true)\r\n            log('Connecting to the device...');\r\n            if (!this.props.miband) {\r\n                const server = await this.props.device.gatt.connect();\r\n                log('Connected');\r\n                let miband = new MiBand(server);\r\n                await miband.init();\r\n                miband.on('heart_rate', (rate) => {\r\n                    log('Heart Rate:', rate)\r\n                    this.props.changeHearthBeat(rate)\r\n                })\r\n                this.props.changeMiband(miband)\r\n            }\r\n            await this.props.miband.hrmStart()\r\n        } catch (error) {\r\n            log('Argh!', error.message || error);\r\n            await this.props.changeTreinoStatus(false)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.startHrm(console.log)}>Iniciar Treino</Button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    device: state.user.device,\r\n    miband: state.user.miband,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeHearthBeat, changeTreinoStatus, changeMiband }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonIniciarTreino);","\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeTreinoStatus, changeMiband } from '../actions'\r\n\r\n\r\nclass ButtonFinalizarTreino extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.endHrm = this.endHrm.bind(this)\r\n    }\r\n\r\n    endHrm = async (log) => {\r\n        log('end hrm')\r\n        await this.props.miband.hrmStop()\r\n        await this.props.changeTreinoStatus(false)\r\n        await this.props.changeMiband(null)\r\n        log('disconnect device')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.endHrm(console.log)}>Finalizar Treino</Button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    miband: state.user.miband,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeTreinoStatus, changeMiband }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonFinalizarTreino);","\r\n\r\n\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Miband from 'miband'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { changeMiband } from '../actions'\r\n\r\nclass ButtonNotificar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.notigicarPulseira = this.notigicarPulseira.bind(this)\r\n    }\r\n\r\n    async notigicarPulseira(log) {\r\n        if (this.props.miband) {\r\n            this.props.miband.showNotification('message');\r\n        } else {\r\n            const server = await this.props.device.gatt.connect();\r\n            let miband = new Miband(server);\r\n            this.props.changeMiband(miband)\r\n            await miband.init();\r\n            miband.showNotification('message');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.notigicarPulseira(console.log)}>Notificar Pulseira</Button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    device: state.user.device,\r\n    miband: state.user.miband,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeMiband }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonNotificar);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { changeBluetooth } from './actions'\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box'\nimport If from \"./template/if\";\nimport ButtonConnectart from './template/buttonConnectar'\nimport ButtonIniciarTreino from './template/buttonIniciarTreino'\nimport ButtonFinalizarTreino from './template/buttonFinalizarTreino'\nimport ButtonNotificar from './template/buttonNotificar'\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.props.changeBluetooth(navigator.bluetooth)\n  }\n\n  render() {\n    return (\n      <Box className=\"App\" justifyContent=\"flex-start\">\n        {/* <h1>Pulseira: {this.props.serial}</h1>\n        <h1>{this.props.name} - {this.props.id}</h1> */}\n        <div className='button-padding'>\n          <Icon>favorite</Icon> : <strong>{this.props.hearthBeat}</strong>\n        </div>\n        <If hidden={this.props.device !== null}>\n          <div className='button-padding'>\n            <ButtonConnectart />\n          </div>\n        </If>\n        <If hidden={this.props.isTreinoStarted || this.props.device === null}>\n          <div className='button-padding'>\n            <ButtonIniciarTreino />\n          </div>\n        </If>\n        <If hidden={!this.props.isTreinoStarted || this.props.device === null}>\n          <div className='button-padding'>\n            <ButtonFinalizarTreino />\n          </div>\n        </If>\n        <If hidden={this.props.device === null}>\n          <div className='button-padding'>\n            <ButtonNotificar />\n          </div>\n        </If>\n      </Box>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  id: state.user.id,\n  name: state.user.name,\n  hearthBeat: state.user.hearthBeat,\n  device: state.user.device,\n  isTreinoStarted: state.user.isTreinoStarted\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeBluetooth }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux'\r\n\r\nconst INITIAL_STATE = {\r\n    id: '123548',\r\n    name: 'allan contesini',\r\n    hearthBeat: 0,\r\n    bluetooth: null,\r\n    device: null,\r\n    miband: null,\r\n    isTreinoStarted: false,\r\n}\r\n\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'ID_CHANGED':\r\n            return { ...state, id: action.payload }\r\n        case 'NAME_CHANGED':\r\n            return { ...state, name: action.payload }\r\n        case 'HEARTH_BEAT_CHANGED':\r\n            return { ...state, hearthBeat: action.payload }\r\n        case 'MIBAND_CHANGED':\r\n            return { ...state, miband: action.payload }\r\n        case 'BLUETOOTH_CHANGED':\r\n            return { ...state, bluetooth: action.payload }\r\n        case 'DEVICE_CHANGED':\r\n            return { ...state, device: action.payload }\r\n        case 'TREINO_CHANGED':\r\n            return { ...state, isTreinoStarted: action.payload }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport promise from 'redux-promise'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport reducers from './reducers'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = applyMiddleware(thunk, multi, promise)(createStore)(reducers, devTools)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}